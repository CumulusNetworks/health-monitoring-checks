---
- name: Add Grafana repo key
  apt_key:
    url: https://packagecloud.io/gpg.key
    state: present

- name: Add Grafana apt repo
  apt_repository:
    repo: "deb https://packagecloud.io/grafana/stable/debian/ jessie main"
    state: present

- name: Install grafana
  apt:
    name: grafana
    update_cache: yes
    state: present

- name: Configure grafana service
  service:
    name: grafana-server
    state: started
    enabled: yes

# Wait for Grafana to start
- wait_for:
    port: 3000

# 200 is returned when a new key is created
# 500 is returned when the key already exists.
# 500 is considered okay for idempotency
- name: Generate URI Key
  uri:
    url: "http://localhost:3000/api/auth/keys/"
    body: "name=ansible_key&role=Admin"
    user: admin
    password: admin
    force_basic_auth: yes
    method: POST
    status_code: 200, 500
  register: webpage

# Since 500 is success, but no new key is provided
# Only run this if the REST call returned 200
- name: Record URI key as local var
  lineinfile:
    dest: roles/servers/vars/main.yml
    regexp: "api_key:"
    line: "  api_key: \"{{webpage.json.key}}\""
  delegate_to: localhost
  become: false
  when: webpage.status == 200

# When the API key is set in the vars file the first time
# we don't have knowledge of it in this playbook yet.
# This sets a temporary fact to use for the rest of the play
- name: Set API Key
  set_fact:
    grafana: {api_key: "{{webpage.json.key}}"}
  when: webpage.status == 200


# This reports back "okay" but doesn't actually add the datasource
# Needs further work on what is happening with the body options
- name: Add influxdb datasource
  uri:
    url: "http://localhost:3000/api/datasources"
    HEADER_Authorization: "Bearer {{grafana.api_key}}"
    body:
      name: "influx"
      type: "influxdb"
      url: "http://localhost:8086"
      access: "proxy"
      database: "network"
      isDefault: "true"
      user: "admin"
      password: "admin"
    body_format: json
